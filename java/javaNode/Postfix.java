public abstract class Postfix {
	private int lbl;

	Postfix() { lbl = 0; }
	public String label() { lbl++; return "_L" + lbl; }
	public void text(String str) {
		char[] chars = str.toCharArray();
		int len = chars.length;
		for (int i = 0; i < len; i++)
			CHAR(chars[i]);
		CHAR((char)0);
	}
	public long[] doubleBits(double x) {
		long y = Double.doubleToLongBits(x);
		long max = (((long)Integer.MAX_VALUE) + 1) * 2;
		long ret[] = new long[2];
		ret[0] =  (y % max); 
		ret[1] =  (y / max);
		return ret;
	}

	abstract public void NOP();
	abstract public void INT(int val);
	abstract public void ADD();
	abstract public void SUB();
	abstract public void MUL();
	abstract public void DIV();
	abstract public void MOD();
	abstract public void NEG();
	abstract public void INCR(int val);
	abstract public void DECR(int val);
	abstract public void GT();
	abstract public void GE();
	abstract public void LT();
	abstract public void LE();
	abstract public void EQ();
	abstract public void NE();
	abstract public void AND();
	abstract public void OR();
	abstract public void XOR();
	abstract public void NOT();
	abstract public void ROTL();
	abstract public void ROTR();
	abstract public void SHTL();
	abstract public void SHTRU();
	abstract public void SHTRS();
	abstract public void LOCAL(int val);
	abstract public void ADDR(String sym);
	abstract public void LOCV(int val);
	abstract public void ADDRV(String sym);
	abstract public void LOCA(int val);
	abstract public void ADDRA(String sym);
	abstract public void LOAD();
	abstract public void STORE();
	abstract public void LDCHR();
	abstract public void STCHR();
	abstract public void LD16();
	abstract public void ST16();
	abstract public void ENTER(int val);
	abstract public void START();
	abstract public void ALLOC();
	abstract public void LEAVE();
	abstract public void TRASH(int val);
	abstract public void CALL(String sym);
	abstract public void RET();
	abstract public void RETN(int val);
	abstract public void BRANCH();
	abstract public void LEAP();
	abstract public void JMP(String sym);
	abstract public void JZ(String sym);
	abstract public void JNZ(String sym);
	abstract public void DUP();
	abstract public void SWAP();
	abstract public void SP();
	abstract public void PUSH();
	abstract public void POP();
	abstract public void I2D();
	abstract public void F2D();
	abstract public void D2I();
	abstract public void D2F();
	abstract public void DADD();
	abstract public void DSUB();
	abstract public void DMUL();
	abstract public void DDIV();
	abstract public void DCMP();
	abstract public void DNEG();
	abstract public void LOAD2();
	abstract public void STORE2();
	abstract public void DUP2();
	abstract public void DPUSH();
	abstract public void DPOP();
	abstract public void NIL();
	abstract public void TEXT();
	abstract public void RODATA();
	abstract public void DATA();
	abstract public void BSS();
	abstract public void ALIGN();
	abstract public void EXTRN(String sym);
	abstract public void COMMON(int val);
	abstract public void GLOBL(String sym);
	abstract public void GLOBLfunc(String sym);
	abstract public void GLOBLdata(String sym);
	abstract public void LABEL(String sym);
	abstract public void CONST(int val);
	abstract public void STR(String val);
	abstract public void CHAR(char val);
	abstract public void ID(String sym);
	abstract public void BYTE(int val);
	abstract public void FLOAT(float val);
	abstract public void DOUBLE(double val);
	abstract public void ULDCHR();
	abstract public void ULD16();
	abstract public void UDIV();
	abstract public void UMOD();
	abstract public void UGT();
	abstract public void UGE();
	abstract public void ULT();
	abstract public void ULE();
	abstract public void JEQ(String sym);
	abstract public void JNE(String sym);
	abstract public void JGT(String sym);
	abstract public void JGE(String sym);
	abstract public void JLT(String sym);
	abstract public void JLE(String sym);
	abstract public void JUGT(String sym);
	abstract public void JUGE(String sym);
	abstract public void JULT(String sym);
	abstract public void JULE(String sym);
}
